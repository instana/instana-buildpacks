version: 2.1
orbs:
  node: circleci/node@4.1.0
  pack: buildpacks/pack@0.2.0

workflows:
  instana-cloudrun-buildpack:
    jobs:
      - build-nodejs-dependencies:
          matrix:
            parameters:
              node-version:
                - 10.23.0
                - 12.19.1
                - 14.15.1
                - 15.2.1
      - build-and-publish:
          context: cloud-native-buildpacks
          draft: true
          requires:
            - build-nodejs-dependencies

jobs:

  build-nodejs-dependencies:
    docker:
      - image: 'cimg/base:stable'
    parameters:
      node-version:
        type: string
    steps:
    - checkout
    - node/install:
        node-version: << parameters.node-version >>
    - run:
        name: Create workspace mount point
        command: mkdir workspace
    - attach_workspace:
        at: workspace
    - run:
        name: Install @instana/google-cloud-run
        command: |
          mkdir workspace/nodejs-<< parameters.node-version >>
          cd workspace/nodejs-<< parameters.node-version >>
          npm install @instana/google-cloud-run
    - persist_to_workspace:
        root: workspace
        paths:
          - nodejs-<< parameters.node-version >>

  build-and-publish:
    docker:
      - image: 'cimg/base:stable'
    parameters:
      draft:
        default: true
        type: boolean
    steps:
      - checkout
      - pack/install-pack
      - run:
          name: Create workspace mount point
          command: mkdir workspace
      - attach_workspace:
          at: workspace
      - setup_remote_docker
      - run:
          name: Install xsltproc
          command: |
            sudo apt-get update
            sudo apt-get install -y xsltproc
      - artifactory-fetch-latest-version:
          artifact-id: standalone-collector-jvm
          artifact-type: jar
          save-to: google-cloud-platform/cloud-run/src/instrumentation/jvm/standalone-collector-jvm.jar
      - artifactory-fetch-latest-version:
          artifact-id: nodejs-cloud-run-dependencies
          artifact-type: tgz
          save-to: google-cloud-platform/cloud-run/src/instrumentation/nodejs/nodejs-instrumentation.tgz
      - artifactory-fetch-latest-version:
          artifact-id: core-clr-extension
          artifact-type: zip
          save-to: google-cloud-platform/cloud-run/src/instrumentation/netcore/core-clr-extension.zip
      - run:
          name: Log into containers.instana.io
          command: |
            echo "${CONTAINERS_INSTANA_IO_PASSWORD}" | docker login --username "${CONTAINERS_INSTANA_IO_USERNAME}" --password-stdin containers.instana.io
      - run:
          name: Package all the things
          command: |
            mkdir nodejs-dependencies

            for nodejs_version in workspace/nodejs-*; do
              major_version=$(echo "${nodejs_version}" | sed -r 's/workspace\/nodejs-([0-9]*)\..*/\1/')
              cp -R "${nodejs_version}" "nodejs-dependencies/${major_version}" 
            done

            if [ <<parameters.draft>> = true ]; then
              image_name='containers.instana.io/instana/prerelease/google/buildpack'
            else
              image_name='containers.instana.io/instana/release/google/buildpack'
            fi

            tar czf nodejs-instrumentation.tgz -C nodejs-dependencies/ .

            cp nodejs-instrumentation.tgz google-cloud-platform/cloud-run/src/instrumentation/nodejs/

            pack package-buildpack instana-cloudrun-buildpack.cnb --config google-cloud-platform/cloud-run/package.toml --format file

            pack package-buildpack "${image_name}" --config google-cloud-platform/cloud-run/package.toml --format image
            docker save -o instana-cloudrun-buildpack.image "${image_name}"

            docker push "${image_name}"
      - store_artifacts:
          path: &cnb instana-cloudrun-buildpack.cnb
          destination: *cnb
      - store_artifacts:
          path: &image instana-cloudrun-buildpack.image
          destination: *image
      - run:
          name: Publish Docker image
          command: |
            image_name='containers.instana.io/instana/release/google/buildpack'
            pack package-buildpack "${image_name}" --config google-cloud-platform/cloud-run/package.toml --format image
            docker push "${image_name}"

commands:
  github-fetch-latest-version:
    parameters:
      project:
        type: string
      artifact-type:
        type: string
      save-to:
        type: string
    steps:
      - run:
          name: Fetching the last release of the <<parameters.project>> project
          command: |
            release=$(curl -L -H 'Accepted: application/json' -u 'mmanciop:b84e617c96f81c45dcfe51e0b4313c20a8f7bf9f' https://api.github.com/repos/instana/libinstana_init/releases/latest | jq .assets_url)

  artifactory-fetch-latest-version:
    parameters:
      artifact-id:
        type: string
      artifact-type:
        type: string
      save-to:
        type: string
    steps:
      - run:
          name: Fetching the <<parameters.artifact-id>> dependency
          command: |
            base_url='https://artifact-public.instana.io/artifactory/shared/com/instana'
            curl --silent -k --fail --user "_:${INSTANA_DOWNLOAD_KEY}" "${base_url}/<<parameters.artifact-id>>/maven-metadata.xml" -o maven-metadata.xml

            echo '<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
                <xsl:strip-space elements="*"/>
                <xsl:output indent="yes" omit-xml-declaration="yes"/>
                <xsl:template match="/">
                    <xsl:for-each select="/metadata/versioning/versions/version">
                        <xsl:value-of select="." />
                        <xsl:text>&#xa;</xsl:text>
                    </xsl:for-each>
                </xsl:template>
            </xsl:stylesheet>' > extract_latest_version.xslt

            xsltproc extract_latest_version.xslt maven-metadata.xml > versions
            LATEST_VERSION=$(cat versions | grep -v -e '^$' | grep -v 'dev' | grep -v 'RC' | tail -1)
            echo "The latest version of <<parameters.artifact-id>> is: ${LATEST_VERSION}"

            curl --verbose -k --fail --user "_:${INSTANA_DOWNLOAD_KEY}" "${base_url}/<<parameters.artifact-id>>/${LATEST_VERSION}/<<parameters.artifact-id>>-${LATEST_VERSION}.<<parameters.artifact-type>>" -o <<parameters.save-to>>
